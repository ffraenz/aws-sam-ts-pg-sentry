AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  aws-sam-ts-pg-sentry

  Sample SAM Template for aws-sam-ts-pg-sentry

Parameters:
  DatabaseUrl:
    Type: String
    Default: ""
    NoEcho: true
  SentryDsn:
    Type: String
    Default: ""

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 10

Resources:
  DrizzlePgFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: function-drizzle-pg/
      Handler: app.lambdaHandler
      Runtime: nodejs20.x
      Architectures:
        - arm64
      Environment:
        Variables:
          NODE_OPTIONS: " --require ./instrument.js --enable-source-maps"
          DATABASE_URL: !Ref DatabaseUrl
          SENTRY_DSN: !Ref SentryDsn
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        Loader:
          - .node=copy
        EntryPoints:
          - app.ts
          - instrument.ts

  PgFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: function-pg/
      Handler: app.lambdaHandler
      Runtime: nodejs20.x
      Architectures:
        - arm64
      Environment:
        Variables:
          NODE_OPTIONS: " --require ./instrument.js --enable-source-maps"
          DATABASE_URL: !Ref DatabaseUrl
          SENTRY_DSN: !Ref SentryDsn
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        Loader:
          - .node=copy
        EntryPoints:
          - app.ts
          - instrument.ts

Outputs:
  DrizzlePgFunction:
    Description: "Drizzle+pg Lambda Function ARN"
    Value: !GetAtt DrizzlePgFunction.Arn
  PgFunction:
    Description: "pg Lambda Function ARN"
    Value: !GetAtt PgFunction.Arn
